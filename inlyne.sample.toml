# A different scale factor can be specified
# Default: The window's scale factor (system dependent)
scale = 1.5

# A maximum page width can be specified in pixels
# Default: Unconstrained
page-width = 800

# The theme can be set as well
# Default: "Auto"
# Possible values: ["Auto", "Light", "Dark"]
theme = "Dark"

# Number of lines to scroll when using a line-based scrolling device (a lot of
# mice)
# Default: 3.0
lines-to-scroll = 4.5

# The light and dark themes can be customized as well
# Here is a dark theme inspired by GitHub's dark dimmed theme
[dark-theme]
# Regular text color
text-color = 0xadbac7
# Background canvas color
background-color = 0x22272e
# Inline code text color
code-color = 0x8d97a5
# Code block background color
code-block-color = 0x2d333b
# Quote block background color
quote-block-color = 0x262b32
# Hyperlink text color
link-color = 0x539bf5
# Text selection color
select-color = 0x438bd5
# Checkbox ticked background color
checkbox-color = 0x006400
# Syntax highlighting theme. All of `syntect`s default themes are supported
# Possible values: [
#     "base16-ocean-dark",  "base16-eighties-dark", "base16-mocha-dark",
#     "base16-ocean-light", "inspired-github",      "solarized-dark",
#     "solarized-light"
# ]
# Default: "base16-ocean-dark"
code-highlighter = "base16-mocha-dark"

# And the same settings are available for the light theme as well
[light-theme]
# Default: "base16-ocean-light"
code-highlighter = "solarized-light"
# ... Refer to `[dark-theme]`'s other fields

# Change the appearance of text with font options
[font-options]
# Name of font for regular text
regular-font = "Chalkduster"
# Name of font for monospace text such as code
monospace-font = "Monaco"

# Custom keybinds for actions
#
# HOT TIP: If you want to understand the key events received and actions that
#     are emitted then you can run `inlyne` with the `INLYNE_LOG` env var set
#     to "inlyne::keybindings=debug"
#
# Each entry maps an action to a key combo
#
# Action -> Predefined list of possible interactions to perform
# Key Combo -> Either a single modified key or an array of modified keys
# Modified Key -> Either an unmodified key or an obj with a key and modifiers
#
# Possible Modifiers: ["Alt", "Ctrl", "Os", "Shift"]
# Possible Actions: [
#     "ToTop", "ToBottom",
#     "ScrollUp", "ScrollDown",
#     "PageUp", "PageDown",
#     "ZoomIn", "ZoomOut", "ZoomReset",
#     "Copy",
#     "Quit",
# ]
# Possible Keys: [
#     "a"-"z",
#     "0"-"9",
#     "`", "@", "*", "-", "=", "+", "[", "]", "\\", ";", ":", "'", ",", ".",
#     "/",
#     "F1"-"F12",
#     "Up", "Down", "Left", "Right",
#     "Enter", "Space", "Tab", Backspace", "Escape", PageUp", "PageDown",
#     "Home", "End", "Delete", "Insert"
# ]
[keybindings]
# Base will override the defaults if set
# Default: Not set
base = [
    ["ToTop", "Home"],
    ["ToBottom", "End"],
    ["Copy", { key = "c", mod = ["Ctrl"] }],
    ["ToTop", ["g", "g"]],
    ["ToBottom", { key = "g", mod = ["Shift"] }],
    ["Copy", "y"],
]
# Extra will be applied on top of base/defaults
extra = [
    # ... Refer to `base`
]
